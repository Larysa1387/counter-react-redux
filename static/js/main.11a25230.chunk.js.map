{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","redux/counter/counter-types.js","components/Counter/Counter.js","redux/counter/counter-actions.js","views/CounterView.js","App.js","redux/counter/counter-reducer.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","console","log","className","type","onClick","Value","value","connect","state","counter","dispatch","actionTypes","payload","actions","CounterView","App","to","path","combineReducers","rootReducer","counterReducer","store","createStore","composeWithDevTools","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAgBeA,EAdE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAErC,OADAC,QAAQC,IAAIJ,GAEV,sBAAKK,UAAU,oBAAf,UACE,yBAAQC,KAAK,SAASC,QAASL,EAA/B,iFACgBF,KAEhB,yBAAQM,KAAK,SAASC,QAASN,EAA/B,iFACgBD,SCNPQ,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,KCEhD,EAJG,oBAIH,EAHG,oB,MCmBlB,IAUeC,eAVS,SAACC,GAAD,MAAY,CAClCF,MAAOE,EAAMC,QAAQH,MACrBT,KAAMW,EAAMC,QAAQZ,SAGK,SAACa,GAAD,MAAe,CACxCZ,YAAa,SAACQ,GAAD,OAAWI,ECzBD,SAAAJ,GAAK,MAAK,CACjCH,KAAMQ,EACNC,QAASN,GDuBwBO,CAAkBP,KACnDP,YAAa,SAACO,GAAD,OAAWI,ECrBD,SAAAJ,GAAK,MAAK,CACjCH,KAAMQ,EACNC,QAASN,GDmBwBO,CAAkBP,QAGtCC,EAvBf,YAA6D,IAA1CD,EAAyC,EAAzCA,MAAOT,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC3C,OACE,sBAAKG,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CACET,KAAMA,EACNC,YAAa,kBAAMA,EAAYD,IAC/BE,YAAa,kBAAMA,EAAYF,YEXxB,SAASiB,IACtB,OAAO,cAAC,EAAD,ICCT,IAuBeC,EAvBH,kBACV,qCACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,WAAT,4DAOJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAACH,EAAD,Y,eCFOI,4BAAgB,CAC7BZ,MAfmB,WAAoC,IAAnCE,EAAkC,uDAA1B,GAA0B,yCAApBL,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,QACxC,OAAQT,GACN,IAAK,oBACH,OAAOK,EAAQI,EACjB,IAAK,oBACH,OAAOJ,EAAQI,EAEjB,QACE,OAAOJ,IAQXX,KAJkB,eAACW,EAAD,uDAAS,EAAT,OAAuBA,KCgErCW,EAAcD,0BAAgB,CAClCT,QAASW,IAIIC,EAFDC,sBAAYH,EAAaI,iC,MCxEvCvB,QAAQC,IAAIoB,EAAMG,YAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINO,SAASC,eAAe,W","file":"static/js/main.11a25230.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Controls = ({ step, onIncrement, onDecrement }) => {\r\n  console.log(step);\r\n  return (\r\n    <div className=\"Counter__controls\">\r\n      <button type=\"button\" onClick={onDecrement}>\r\n        Уменьшить на {step}\r\n      </button>\r\n      <button type=\"button\" onClick={onIncrement}>\r\n        Увеличить на {step}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\n\r\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\r\n\r\nexport default Value;\r\n","const INCREMENT = \"counter/Increment\";\r\nconst DECREMENT = \"counter/Decrement\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { INCREMENT, DECREMENT };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Controls from \"./Controls\";\r\nimport Value from \"./Value\";\r\nimport * as actions from \"../../redux/counter/counter-actions\";\r\nimport \"./Counter.css\";\r\n\r\nfunction Counter({ value, step, onIncrement, onDecrement }) {\r\n  return (\r\n    <div className=\"Counter\">\r\n      <Value value={value} />\r\n      <Controls\r\n        step={step}\r\n        onIncrement={() => onIncrement(step)}\r\n        onDecrement={() => onDecrement(step)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.counter.value,\r\n  step: state.counter.step,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onIncrement: (value) => dispatch(actions.increment(value)),\r\n  onDecrement: (value) => dispatch(actions.decrement(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter); //карирование\r\n","import actionTypes from \"./counter-types\";\r\nexport const increment = value => ({\r\n  type: actionTypes.INCREMENT,\r\n  payload: value,\r\n});\r\n\r\nexport const decrement = value => ({\r\n  type: actionTypes.DECREMENT,\r\n  payload: value,\r\n});\r\n","import React from \"react\";\r\nimport Counter from \"../components/Counter\";\r\n\r\nexport default function CounterView() {\r\n  return <Counter />;\r\n}\r\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n// import TodosView from \"./views/TodosView\";\nimport CounterView from \"./views/CounterView\";\n\nconst App = () => (\n  <>\n    <ul>\n      <li>\n        <Link to=\"/counter\">Счётчик</Link>\n      </li>\n      {/* <li>\n        <Link to=\"/todos\">Заметки</Link>\n      </li> */}\n    </ul>\n\n    <Switch>\n      <Route path=\"/counter\">\n        <CounterView />\n      </Route>\n\n      {/* <Route path=\"/todos\">\n        <TodosView />\n      </Route> */}\n    </Switch>\n  </>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\n\r\nconst valueReducer = (state = 10, { type, payload }) => {\r\n  switch (type) {\r\n    case \"counter/Increment\":\r\n      return state + payload;\r\n    case \"counter/Decrement\":\r\n      return state - payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst stepReducer = (state = 5, action) => state;\r\n\r\nexport default combineReducers({\r\n  value: valueReducer,\r\n  step: stepReducer,\r\n});\r\n","import { createStore /*, applyMiddleware*/, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport counterReducer from \"./counter/counter-reducer\";\r\n\r\n// const initailState = {\r\n//   counter: {\r\n//     value: 10,\r\n//     step: 15,\r\n//   },\r\n// };\r\n\r\n// const reducer = (state = initailState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"counter/Increment\":\r\n//       // return { counterValue: state.counterValue + 1 };\r\n//       return {\r\n//         ...state,\r\n//         counter: {\r\n//           ...state.counter,\r\n//           value: state.counter.value + payload,\r\n//         },\r\n//       };\r\n//     case \"counter/Decrement\":\r\n//       return {\r\n//         ...state,\r\n//         counter: {\r\n//           ...state.counter,\r\n//           value: state.counter.value - payload,\r\n//         },\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// Этот редьюсер только для каунтера\r\n// const counterInitialState = {\r\n//   value: 10,\r\n//   step: 15,\r\n// };\r\n\r\n// Разобьем свойства стейта на отдельные редьюсеры\r\n// const valueReducer = (state = 10, { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"counter/Increment\":\r\n//       return state + payload;\r\n//     case \"counter/Decrement\":\r\n//       return state - payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const stepReducer = (state = 5, action) => state;\r\n\r\n// const counterReducer = (state = counterInitialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"counter/Increment\":\r\n//       return {\r\n//         ...state,\r\n//         value: state.value + payload,\r\n//       };\r\n//     case \"counter/Decrement\":\r\n//       return {\r\n//         ...state,\r\n//         value: state.value - payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const counterReducer = combineReducers({\r\n//   value: valueReducer,\r\n//   step: stepReducer,\r\n// });\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n});\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\n// import \"./styles/base.scss\";\n\nconsole.log(store.getState()); //Посмотреть актуальный стейт\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}